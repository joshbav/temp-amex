####################
# Your custom rules!
####################

# Add new rules, like this one
# - rule: A shell is run in a container
#   desc: An event will trigger every time you run a shell in a container
#   condition: evt.type = execve and evt.dir=< and container.id != host and proc.name = bash
#   output: "Suspect shell run in container (user=%user.name %container.info shell=%proc.name parent=%proc.pname cmdline=%proc.cmdline)"
#   priority: ERROR
#   tags: [shell]

# Or override any rule, macro, or list from the Default Rules
---
- macro: "amex_write_etc_common"
  condition: "etc_dir and evt.dir = < and amex_open_write and proc_name_exists and not\
    \ proc.name in (passwd_binaries, shadowutils_binaries, sysdigcloud_binaries,\n\
    \                      package_mgmt_binaries, ssl_mgmt_binaries, dhcp_binaries,\n\
    \                      dev_creation_binaries, shell_mgmt_binaries,\n         \
    \             mail_config_binaries,\n                      sshkit_script_binaries,\n\
    \                      ldconfig.real, ldconfig, confd, gpg, insserv,\n       \
    \               apparmor_parser, update-mime, tzdata.config, tzdata.postinst,\n\
    \                      systemd, systemd-machine, systemd-sysuser,\n          \
    \            debconf-show, rollerd, bind9.postinst, sv,\n                    \
    \  gen_resolvconf., update-ca-certi, certbot, runsv,\n                      qualys-cloud-ag,\
    \ locales.postins, nomachine_binaries,\n                      adclient, certutil,\
    \ crlutil, pam-auth-update, parallels_insta,\n                      openshift-launc,\
    \ update-rc.d, puppet)\nand not (container and proc.cmdline in (\"cp /run/secrets/kubernetes.io/serviceaccount/ca.crt\
    \ /etc/pki/ca-trust/source/anchors/openshift-ca.crt\")) and not proc.pname in\
    \ (sysdigcloud_binaries, mail_config_binaries, hddtemp.postins, sshkit_script_binaries,\
    \ locales.postins, deb_binaries, dhcp_binaries) and not fd.name pmatch (safe_etc_dirs)\
    \ and not fd.name in (/etc/container_environment.sh, /etc/container_environment.json,\
    \ /etc/motd, /etc/motd.svc) and not sed_temporary_file and not exe_running_docker_save\
    \ and not ansible_running_python and not python_running_denyhosts and not fluentd_writing_conf_files\
    \ and not user_known_write_etc_conditions and not run_by_centrify and not run_by_adclient\
    \ and not qualys_writing_conf_files and not git_writing_nssdb and not plesk_writing_keys\
    \ and not plesk_install_writing_apache_conf and not plesk_running_mktemp and not\
    \ networkmanager_writing_resolv_conf and not run_by_chef and not add_shell_writing_shells_tmp\
    \ and not duply_writing_exclude_files and not xmlcatalog_writing_files and not\
    \ parent_supervise_running_multilog and not supervise_writing_status and not pki_realm_writing_realms\
    \ and not htpasswd_writing_passwd and not lvprogs_writing_conf and not ovsdb_writing_openvswitch\
    \ and not datadog_writing_conf and not curl_writing_pki_db and not haproxy_writing_conf\
    \ and not java_writing_conf and not dpkg_scripting and not parent_ucf_writing_conf\
    \ and not rabbitmq_writing_conf and not rook_writing_conf and not php_handlers_writing_conf\
    \ and not sed_writing_temp_file and not cron_start_writing_pam_env and not httpd_writing_conf_logs\
    \ and not mysql_writing_conf and not openvpn_writing_conf and not consul_template_writing_conf\
    \ and not countly_writing_nginx_conf and not ms_oms_writing_conf and not ms_scx_writing_conf\
    \ and not azure_scripts_writing_conf and not azure_networkwatcher_writing_conf\
    \ and not couchdb_writing_conf and not update_texmf_writing_conf and not slapadd_writing_conf\
    \ and not symantec_writing_conf and not liveupdate_writing_conf and not sosreport_writing_files\
    \ and not selinux_writing_conf and not veritas_writing_config and not nginx_writing_conf\
    \ and not nginx_writing_certs and not chef_client_writing_conf and not centrify_writing_krb\
    \ and not cockpit_writing_conf and not ipsec_writing_conf and not httpd_writing_ssl_conf\
    \ and not userhelper_writing_etc_security and not pkgmgmt_progs_writing_pki and\
    \ not update_ca_trust_writing_pki and not brandbot_writing_os_release and not\
    \ redis_writing_conf and not openldap_writing_conf and not ucpagent_writing_conf\
    \ and not iscsi_writing_conf and not istio_writing_conf and not ufw_writing_conf\
    \ and not calico_writing_conf and not calico_writing_envvars and not prometheus_conf_writing_conf\
    \ and not openshift_writing_conf and not keepalived_writing_conf and not rancher_writing_conf\
    \ and not checkpoint_writing_state and not jboss_in_container_writing_passwd and\
    \ not etcd_manager_updating_dns and not user_known_write_below_etc_activities\
    \ and not automount_using_mtab and not mcafee_writing_cma_d and not avinetworks_supervisor_writing_ssh\
    \ and not multipath_writing_conf\n"
  append: false

- rule: "josh - Write below etc"
  desc: "an attempt to write to any file below /etc"
  condition: "write_etc_common2"
  output: "File below /etc opened for writing (user=%user.name command=%proc.cmdline\
    \ parent=%proc.pname pcmdline=%proc.pcmdline file=%fd.name program=%proc.name\
    \ gparent=%proc.aname[2] ggparent=%proc.aname[3] gggparent=%proc.aname[4])"
  priority: "ERROR"
  tags:
  - "filesystem"
  append: false

- macro: "etc_dir"
  condition: "fd.name startswith /etc/"
  append: false

- macro: "write_etc_common2"
  condition: "etc_dir and evt.dir = < and open_write and proc_name_exists\n"
  append: false

- rule: "Josh - Attach/Exec Pod & not user X"
  desc: "Detect any attempt to attach/exec to a pod\n"
  condition: "kevt_started and pod_subresource and kcreate and ka.target.subresource\
    \ in (exec,attach) and ka.user.name != nayeem"
  output: "Attach/Exec to pod (user=%ka.user.name pod=%ka.target.name ns=%ka.target.namespace\
    \ action=%ka.target.subresource command=%ka.uri.param[command])"
  priority: "NOTICE"
  tags:
  - "k8s"
  source: "k8s_audit"
  append: false

- rule: "Attach/Exec Pod by disallowed"
  desc: "Detect any attempt to attach/exec to a pod\n"
  condition: "kevt_started and pod_subresource and kcreate and ka.target.subresource\
    \ in (exec,attach) "
  output: "Attach/Exec to pod (user=%ka.user.name pod=%ka.target.name ns=%ka.target.namespace\
    \ action=%ka.target.subresource command=%ka.uri.param[command]) "
  priority: "NOTICE"
  tags:
  - "k8s"
  source: "k8s_audit"
  append: false

- rule: "Suspend bash history"
  desc: "Suspend bash history"
  condition: "proc.cmdline startswith \"set +o history\""
  output: "Test"
  priority: "ALERT"
  tags: []
  source: "syscall"
  append: false

- macro: "amex_open_write"
  condition: "(evt.type=open or evt.type=openat) and evt.is_open_write=true and fd.typechar='f'"
  append: false

